package ecologylab.semantics.generated.test.test_basics;

import java.util.List;

import ecologylab.semantics.metadata.Metadata;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataInteger;
import ecologylab.semantics.metadata.scalar.MetadataString;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_nowrap;
import ecologylab.serialization.annotations.simpl_scalar;
import ecologylab.serialization.annotations.simpl_tag;

/**
*  TestBase.java
*  s.im.pl serialization
*
*  Generated by JavaTranslator on 09/16/11.
*  Copyright 2011 Interface Ecology Lab. 
*/

/** 
 */ 
@simpl_inherit
@simpl_tag("the_base_class")
public class TestBase extends Metadata
{
	/** 
	 */ 
	@simpl_scalar	
	private ecologylab.semantics.metadata.scalar.MetadataString aString;

	/** 
	 */ 
	@simpl_scalar	
	private ecologylab.semantics.metadata.scalar.MetadataInteger anInt;

	/** 
	 * Comment for comp
	 */ 
	@simpl_composite	@mm_name("a_comp")
	private Metadata aComp;

	/** 
	 * Comment for coll
	 */ 
	@simpl_collection("item")	@mm_name("items")
	private List<Metadata> items;

	/** 
	 */ 
	@simpl_nowrap	@simpl_collection("thing")	@mm_name("coll_2")
	private List<Metadata> coll2;

	public TestBase()
	{ }

	public TestBase(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	aString()
	{
		MetadataString	result = this.aString;
		if (result == null)
		{
			result = new MetadataString();
			this.aString = result;
		}
		return result;
	}

	public String getAString()
	{
		return this.aString == null ? null : aString().getValue();
	}

	public ecologylab.semantics.metadata.scalar.MetadataString getAStringMetadata()
	{
		return aString;
	}

	public void setAString(String aString)
	{
		if (aString != null)
			this.aString().setValue(aString);
	}

	public void setAStringMetadata(ecologylab.semantics.metadata.scalar.MetadataString aString)
	{
		this.aString = aString;
	}

	public MetadataInteger	anInt()
	{
		MetadataInteger	result = this.anInt;
		if (result == null)
		{
			result = new MetadataInteger();
			this.anInt = result;
		}
		return result;
	}

	public Integer getAnInt()
	{
		return this.anInt == null ? 0 : anInt().getValue();
	}

	public ecologylab.semantics.metadata.scalar.MetadataInteger getAnIntMetadata()
	{
		return anInt;
	}

	public void setAnInt(Integer anInt)
	{
		if (anInt != 0)
			this.anInt().setValue(anInt);
	}

	public void setAnIntMetadata(ecologylab.semantics.metadata.scalar.MetadataInteger anInt)
	{
		this.anInt = anInt;
	}

	public Metadata getAComp()
	{
		return aComp;
	}

	public void setAComp(Metadata aComp)
	{
		this.aComp = aComp;
	}

	public List<Metadata> getItems()
	{
		return items;
	}

	public void setItems(List<Metadata> items)
	{
		this.items = items;
	}

	public List<Metadata> getColl2()
	{
		return coll2;
	}

	public void setColl2(List<Metadata> coll2)
	{
		this.coll2 = coll2;
	}
}
